---
version: '3.5'

services:
  nats:
    container_name: nats
    image: nats:latest
    restart: always
    ports:
      - 4222:4222 # client
      - 8222:8222 # monitoring
      - 6222:6222 # routing

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - ./db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - ./db/postgresql.conf:/usr/share/postgresql/postgresql.conf
      - pgdata:/var/lib/postgresql/data

  api:
    container_name: api
    environment:
      - POSTGRESQL_USER=postgres
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      nats:
        condition: service_started

  processor:
    container_name: processor
    environment:
      - generator_HOST=processor
    build:
      context: .
      dockerfile: processor/Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      nats:
        condition: service_started

  pgadm:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:5050"
      - "1027:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgadmin-data:
  pgdata:
